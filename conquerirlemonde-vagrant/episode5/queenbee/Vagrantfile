$update_channel = "alpha"

Vagrant.configure("2") do |config|
	config.vm.box = "coreos-%s" % $update_channel
	config.vm.box_url = "http://%s.release.core-os.net/amd64-usr/current/coreos_production_vagrant.json" % $update_channel
	
	config.vm.network "public_network", ip: "172.20.20.90"
	config.vm.hostname = "deathstar"

	config.vm.network :forwarded_port, guest: 80, host: 80
  	config.vm.network :forwarded_port, guest: 443, host: 443	
	config.vm.network :forwarded_port, guest: 2379, host: 2379
	config.vm.network :forwarded_port, guest: 15441, host: 15441
	config.vm.network :forwarded_port, guest: 10250, host: 10250
	config.vm.network :forwarded_port, guest: 8001, host: 8001
	config.vm.network :forwarded_port, guest: 8285, host: 8285
	config.vm.network :forwarded_port, guest: 8472, host: 8472
	config.vm.network :forwarded_port, guest: 179, host: 179
	
	config.vm.provision :file, :source => "user-data.yml", :destination => "/tmp/vagrantfile-user-data"
        config.vm.provision :shell, :inline => "mv /tmp/vagrantfile-user-data /var/lib/coreos-vagrant/", :privileged => true

	config.vm.provision :shell, :inline => "mkdir -p /home/core/template", :privileged => true
	config.vm.provision :shell, :inline => "chmod 777 -R /home/core/template", :privileged => true

        config.vm.provision :file, source: "./createMasterCertificats.sh", destination:"/home/core/template/createMasterCertificats.sh"
        config.vm.provision :file, source: "./initCluster.sh", destination:"/home/core/template/initCluster.sh"
	config.vm.provision :file, source: "./startCluster.sh", destination:"/home/core/startCluster.sh"	
	config.vm.provision :shell, :inline => "chmod +x /home/core/*.sh", :privileged => true
	config.vm.provision :file, source: "./certificats", destination: "/tmp/ssl"
        config.vm.provision :shell, :inline => "mkdir -p /etc/kubernetes/", :privileged => true
	config.vm.provision :shell, :inline => "mv /tmp/ssl /etc/kubernetes/ssl", :privileged => true
	config.vm.provision :shell, :inline => "chmod 600 /etc/kubernetes/ssl/*-key.pem", :privileged => true
	config.vm.provision :shell, :inline => "chown -R root:root /etc/kubernetes/ssl", :privileged => true

end
